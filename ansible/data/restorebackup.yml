---
- name: Restore PostgreSQL database from backup file to container
  hosts: all
  become: yes
  vars:
    pg_user: "postgres"
    pg_password: "rahasia"
    pg_database: "financetrack"       # Change accordingly to your database to restore
    container_name: "financetrack-postgres-1"  # Change to the container where you want to restore
    backup_dir: "/home/haqqi/app/homelabHq/ansible/data"  # Directory on host where backup resides
    backup_file: "financetrack_backup.dump"              # Backup filename

  tasks:
    - name: Copy backup file from host to container
      command: >
        docker cp {{ backup_dir }}/{{ backup_file }} {{ container_name }}:/tmp/{{ backup_file }}

    - name: Drop the existing database to prepare for restore (optional)
      command: >
        docker exec {{ container_name }} psql -U {{ pg_user }} -c "DROP DATABASE IF EXISTS {{ pg_database }};"
      environment:
        PGPASSWORD: "{{ pg_password }}"

    - name: Create the database again for restore
      command: >
        docker exec {{ container_name }} psql -U {{ pg_user }} -c "CREATE DATABASE {{ pg_database }};"
      environment:
        PGPASSWORD: "{{ pg_password }}"

    - name: Restore the database inside the Docker container
      command: >
        docker exec {{ container_name }}
        pg_restore -U {{ pg_user }}
        -d {{ pg_database }}
        -v /tmp/{{ backup_file }}
      environment:
        PGPASSWORD: "{{ pg_password }}"

    - name: Remove backup file inside container after restoring
      command: >
        docker exec {{ container_name }} rm -f /tmp/{{ backup_file }}

    - name: Show restore confirmation
      debug:
        msg: "PostgreSQL database {{ pg_database }} has been restored successfully from {{ backup_dir }}/{{ backup_file }}"

